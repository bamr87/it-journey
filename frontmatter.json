{
  "$schema": "https://frontmatter.codes/frontmatter.schema.json",
  "frontMatter.content.pageFolders": [
    {
      "title": "posts",
      "previewPath": "/{{fm.type}}/{{year}}/{{month}}/{{day}}",
      "path": "[[workspace]]/pages/_posts",
      "contentTypes": [
        "default"
      ]
    },
    {
      "title": "quickstart",
      "path": "[[workspace]]/pages/_quickstart"
    },
    {
      "title": "notes",
      "path": "[[workspace]]/pages/_notes"
    },
    {
      "title": "about",
      "path": "[[workspace]]/pages/_about"
    },
    {
      "title": "docs",
      "path": "[[workspace]]/pages/_docs"
    },
    {
      "title": "quests",
      "path": "[[workspace]]/pages/_quests"
    }
  ],
  "frontMatter.templates.enabled": true,
  "frontMatter.framework.id": "jekyll",
  "frontMatter.content.publicFolder": "assets",
  "frontMatter.content.draftField": {
    "name": "draft",
    "type": "choice",
    "choices": [
      "draft",
      "in progress",
      "published"
    ]
  },
  "frontMatter.dashboard.openOnStart": true,
  "frontMatter.taxonomy.contentTypes": [
    {
      "name": "default",
      "pageBundle": false,
      "previewPath": null,
      "fields": [
        {
          "title": "Title",
          "name": "title",
          "type": "string"
        },
        {
          "title": "Description",
          "name": "description",
          "type": "string"
        },
        {
          "title": "Publishing date",
          "name": "date",
          "type": "datetime",
          "default": "{{now}}",
          "isPublishDate": true
        },
        {
          "title": "Content preview",
          "name": "preview",
          "type": "image"
        },
        {
          "title": "Is in draft",
          "name": "draft",
          "type": "draft"
        },
        {
          "title": "Tags",
          "name": "tags",
          "type": "tags"
        },
        {
          "title": "Categories",
          "name": "categories",
          "type": "categories"
        },
        {
          "title": "sub-title",
          "name": "sub-title",
          "type": "datetime"
        },
        {
          "title": "excerpt",
          "name": "excerpt",
          "type": "datetime"
        },
        {
          "title": "snippet",
          "name": "snippet",
          "type": "datetime"
        },
        {
          "title": "author",
          "name": "author",
          "type": "string"
        },
        {
          "title": "layout",
          "name": "layout",
          "type": "datetime"
        },
        {
          "title": "keywords",
          "name": "keywords",
          "type": "fields",
          "fields": []
        },
        {
          "title": "lastmod",
          "name": "lastmod",
          "type": "datetime"
        },
        {
          "title": "permalink",
          "name": "permalink",
          "type": "datetime"
        },
        {
          "title": "attachments",
          "name": "attachments",
          "type": "string"
        },
        {
          "title": "fmContentType",
          "name": "fmContentType",
          "type": "string"
        },
        {
          "title": "comments",
          "name": "comments",
          "type": "boolean"
        }
      ]
    }
  ],
  "frontMatter.content.snippets": {
    "Test Snippet": {
      "description": "test",
      "body": "echo \"hello World\"",
      "fields": []
    },
    "django-startup-script": {
      "description": "",
      "body": [
        "#!/bin/bash",
        "",
        "# ==========================",
        "# üîÆ CONFIGURATION SECTION üîÆ",
        "# ==========================",
        "PROJECT_NAME=\"django-magic\"  # Change this to your project name",
        "APP_NAME=\"magic\"  # Change this to your Django app name",
        "GITHUB_USERNAME=\"bamr87\"  # Your GitHub username",
        "GITHUB_REPO=\"https://github.com/$GITHUB_USERNAME/$PROJECT_NAME.git\"  # GitHub repository URL",
        "PYTHON_VERSION=\"python3\"  # Change to \"python\" if using Python 2 (not recommended)",
        "BRANCH_NAME=\"main\"  # Default branch",
        "VENV_NAME=\"venv\"  # Virtual environment name",
        "",
        "",
        "# ==========================",
        "# üöÄ NAVIGATION SECTION üöÄ",
        "# ==========================",
        "echo \"üöÄ Navigating to ~/github directory...\"<end_o",
        "cd ~/github || error_exit \"Failed to navigate to ~/github directory.\"",
        "",
        "# ==========================",
        "# üöÄ HELPER FUNCTIONS",
        "# ==========================",
        "error_exit() {",
        "    echo \"‚ùå Error: $1\"",
        "    exit 1",
        "}",
        "",
        "check_command() {",
        "    command -v \"$1\" >/dev/null 2>&1 || error_exit \"$1 is not installed. Please install it first.\"",
        "}",
        "",
        "# ==========================",
        "# üî• SETTING UP DJANGO PROJECT",
        "# ==========================",
        "echo \"‚ú® Ensuring project directory exists: $PROJECT_NAME...\"",
        "mkdir -p $PROJECT_NAME && cd $PROJECT_NAME || error_exit \"Failed to navigate to project directory.\"",
        "",
        "echo \"üêç Checking virtual environment...\"",
        "if [ ! -d \"$VENV_NAME\" ]; then",
        "    check_command $PYTHON_VERSION",
        "    echo \"üöÄ Creating virtual environment...\"",
        "    $PYTHON_VERSION -m venv $VENV_NAME || error_exit \"Failed to create virtual environment.\"",
        "else",
        "    echo \"‚úÖ Virtual environment already exists.\"",
        "fi",
        "",
        "echo \"üßô‚Äç‚ôÇÔ∏è Activating virtual environment...\"",
        "source $VENV_NAME/bin/activate || error_exit \"Failed to activate virtual environment.\"",
        "",
        "echo \"üì¶ Checking Django installation...\"",
        "if ! python -c \"import django\" 2>/dev/null; then",
        "    echo \"üöÄ Installing Django...\"",
        "    pip install django || error_exit \"Failed to install Django.\"",
        "else",
        "    echo \"‚úÖ Django is already installed.\"",
        "fi",
        "",
        "if [ ! -d $PROJECT_NAME ]; then",
        "    echo \"üöÄ Starting Django project...\"",
        "    django-admin startproject $APP_NAME . || error_exit \"Failed to start Django project.\"",
        "else",
        "    echo \"‚úÖ Django project already exists.\"",
        "fi",
        "",
        "# ==========================",
        "# üî• INITIALIZING GIT",
        "# ==========================",
        "if [ ! -d \".git\" ]; then",
        "    echo \"üé© Initializing Git repository...\"",
        "    git init || error_exit \"Failed to initialize Git repository.\"",
        "else",
        "    echo \"‚úÖ Git repository already initialized.\"",
        "fi",
        "",
        "echo \"‚ö° Ensuring .gitignore exists...\"",
        "cat <<EOL > .gitignore",
        "$VENV_NAME/",
        "__pycache__/",
        "db.sqlite3",
        ".env",
        "EOL",
        "echo \"‚úÖ .gitignore updated.\"",
        "",
        "echo \"üìú Adding files to Git...\"",
        "git add . || error_exit \"Failed to add files to Git.\"",
        "",
        "if ! git rev-parse HEAD >/dev/null 2>&1; then",
        "    echo \"üñäÔ∏è Making initial commit...\"",
        "    git commit -m \"Initial commit - A wizard is never late!\" || error_exit \"Failed to commit changes.\"",
        "else",
        "    echo \"‚úÖ Changes are already committed.\"",
        "fi",
        "",
        "# ==========================",
        "# üï∏Ô∏è CREATING GITHUB REPO (AUTOMATIC)",
        "# ==========================",
        "check_command gh",
        "echo \"üîó Checking if repository exists on GitHub...\"",
        "if ! gh repo view $GITHUB_USERNAME/$PROJECT_NAME >/dev/null 2>&1; then",
        "    echo \"‚ö° Repository does not exist. Creating on GitHub...\"",
        "    gh repo create $GITHUB_USERNAME/$PROJECT_NAME --public --source=. --remote=origin || error_exit \"Failed to create GitHub repository.\"",
        "else",
        "    echo \"‚úÖ Repository already exists on GitHub.\"",
        "fi",
        "",
        "# ==========================",
        "# üï∏Ô∏è LINKING TO GITHUB",
        "# ==========================",
        "if ! git remote get-url origin >/dev/null 2>&1; then",
        "    echo \"üîó Adding remote repository...\"",
        "    git remote add origin $GITHUB_REPO || error_exit \"Failed to add GitHub remote.\"",
        "else",
        "    echo \"‚úÖ Remote repository already set.\"",
        "fi",
        "",
        "echo \"üì° Verifying remote link...\"",
        "git remote -v || error_exit \"Failed to verify remote link.\"",
        "",
        "if ! git rev-parse --abbrev-ref HEAD | grep -q \"^$BRANCH_NAME$\"; then",
        "    echo \"üåø Renaming branch to $BRANCH_NAME...\"",
        "    git branch -M $BRANCH_NAME || error_exit \"Failed to rename branch.\"",
        "else",
        "    echo \"‚úÖ Branch is already set to $BRANCH_NAME.\"",
        "fi",
        "",
        "echo \"üöÄ Pushing code to GitHub...\"",
        "git push -u origin $BRANCH_NAME || echo \"‚ö†Ô∏è Failed to push code. Make sure you are authenticated with GitHub.\"",
        "",
        "# ==========================",
        "# üéâ FINAL MESSAGE",
        "# ==========================",
        "echo \"‚ú® All done! Your Django project is now safely stored in GitHub! üöÄ\"",
        "echo \"üé© To start working on your project, use:\"",
        "echo \"    cd $PROJECT_NAME && source $VENV_NAME/bin/activate && code .\"",
        "echo \"üõ†Ô∏è Happy coding, sorcerer! üßô‚Äç‚ôÇÔ∏è\""
      ],
      "fields": []
    }
  },
  "frontMatter.preview.host": "http://localhost:4000",
  "frontMatter.website.host": "https://it-journey.dev",
  "frontMatter.git.enabled": false,
  "frontMatter.data.types": [
    {
      "id": "navigation",
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "description": "The title of the page",
            "type": "string"
          },
          "icon": {
            "description": "Bootstrap icon",
            "type": "string"
          },
          "url": {
            "description": "The URL of the page",
            "type": "string"
          },
          "sublinks": {
            "description": "sublinks for the section",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "minItems": 1,
              "uniqueItems": true
            },
            "dimensions": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "string"
                },
                "width": {
                  "type": "string"
                },
                "height": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "title",
          "url"
        ]
      }
    }
  ],
  "frontMatter.data.files": [
    {
      "id": "mainNav",
      "title": "Main Navigation",
      "file": "[[workspace]]/_data/navigation/main.yml",
      "fileType": "yaml",
      "labelField": "title",
      "singleEntry": false,
      "type": "navigation"
    },
    {
      "id": "aboutNav",
      "title": "About Navigation",
      "file": "[[workspace]]/_data/navigation/about.yml",
      "fileType": "yaml",
      "labelField": "title",
      "singleEntry": false,
      "type": "navigation"
    },
    {
      "id": "docsNav",
      "title": "Docs Navigation",
      "file": "[[workspace]]/_data/navigation/docs.yml",
      "fileType": "yaml",
      "labelField": "title",
      "singleEntry": false,
      "type": "navigation"
    },
    {
      "id": "homeNav",
      "title": "Home Navigation",
      "file": "[[workspace]]/_data/navigation/home.yml",
      "fileType": "yaml",
      "labelField": "title",
      "singleEntry": false,
      "type": "navigation"
    },
    {
      "id": "postsNav",
      "title": "Posts Navigation",
      "file": "[[workspace]]/_data/navigation/posts.yml",
      "fileType": "yaml",
      "labelField": "title",
      "singleEntry": false,
      "type": "navigation"
    }
  ],
  "frontMatter.content.autoUpdateDate": true
}